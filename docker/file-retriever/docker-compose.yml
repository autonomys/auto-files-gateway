volumes:
  subspace-node-data: {}
  file-retriever-data: {}

services:
  subspace-node:
    image: ${NODE_DOCKER_TAG}
    volumes:
      - subspace-node-data:/var/subspace:rw
    ports:
      - '30333:30333'
      - '30433:30433'
      - '127.0.0.1:9944:9944'
    restart: unless-stopped
    command: >
      run
      --chain ${NETWORK_ID}
      --base-path /var/subspace
      --listen-on /ip4/0.0.0.0/tcp/30333
      --dsn-listen-on /ip4/0.0.0.0/tcp/30433
      --rpc-cors all
      --rpc-methods unsafe
      --rpc-listen-on 0.0.0.0:9944
      --rpc-max-subscriptions-per-connection 1000
      --rpc-max-connections 20000
      --name object-mapping-node
      --sync full
    healthcheck:
      timeout: 5s
      interval: 30s
      retries: 60
    stop_grace_period: 30s
  subspace-http-gateway:
    image: ${GATEWAY_DOCKER_TAG}
    depends_on:
      subspace-node:
        condition: service_healthy
    ports:
      - '8080:8080'
      - '30334:30333'
      - '30434:30433'
    restart: unless-stopped
    stop_grace_period: 30s
    command: http --node-rpc-url ws://subspace-node:9944/ws --http-listen-on 0.0.0.0:8080 --indexer-endpoint ${OBJECT_MAPPING_INDEXER_URL} --allow-private-ips --out-connections ${OUT_CONNECTIONS} --pending-out-connections ${PENDING_OUT_CONNECTIONS}
  file-retriever:
    build:
      context: ../..
      dockerfile: docker/file-retriever/Dockerfile
    container_name: file-retriever
    volumes:
      - file-retriever-data:/.cache
    ports:
      - '8090:8090'
    environment:
      - NODE_ENV=production
      - SUBSPACE_GATEWAY_URLS=http://subspace-http-gateway:8080
      - CORS_ORIGIN=${CORS_ORIGIN}
      - MAX_SIMULTANEOUS_FETCHES=${MAX_SIMULTANEOUS_FETCHES}
      - CACHE_DIR=${CACHE_DIR}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE}
      - CACHE_TTL=${CACHE_TTL}
      - LOG_LEVEL=${LOG_LEVEL}
      - API_SECRET=${API_SECRET}
    depends_on:
      subspace-node:
        condition: service_healthy
    restart: unless-stopped

  agent:
    container_name: newrelic-infra
    image: newrelic/infrastructure:latest
    cap_add:
      - SYS_PTRACE
    network_mode: bridge
    pid: host
    privileged: true
    volumes:
      - '/:/host:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      NRIA_LICENSE_KEY: '${NR_API_KEY}'
      NRIA_DISPLAY_NAME: '${NR_AGENT_IDENTIFIER}'
    restart: unless-stopped
